{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from textblob import TextBlob\n",
    "import textblob\n",
    "import tweepy \n",
    "import sys\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import re\n",
    "\n",
    "# Connection to the api\n",
    "api_key = 'f9QDFkLm0hRjJtlqSZMTTEvxZ'\n",
    "api_key_secret = 'CiS03yMWCwX7Xhubw3AF8wU79F5bDpdU0VtHsC8K24oWBEt7NT'\n",
    "access_token = '1223293246681559042-jSkfiFCdGtpHTcFMOS7zqvaOWVYmBm'\n",
    "access_token_secret = 'ITPw91RpeO6ONMiLuKfE8cOeQnHZOvpDSx2oRoOGHn1QL'\n",
    "\n",
    "#bearer_token = 'AAAAAAAAAAAAAAAAAAAAANNjCQEAAAAA0tQMCT0VtM7NNbjKb5pY%2BUqnzyU%3D5XXmWifVd9R7LJL08OHXaDzdOZttCxETPAycpbsIMCqmxzwSmU'\n",
    "            # o de cima Ãª novo tbm\n",
    "\n",
    "authenticator = tweepy.OAuthHandler(api_key, api_key_secret) \n",
    "authenticator.set_access_token(access_token, access_token_secret) \n",
    "\n",
    "api = tweepy.API(authenticator, wait_on_rate_limit=True)\n",
    "\n",
    "#api.update_status(\"Hello Tweepy\")  # new code]\n",
    "\n",
    "#client = tweepy.Client(bearer_token=) # editado\n",
    "\n",
    "\n",
    "\n",
    "crypto_currency = 'Bitcoin'\n",
    "\n",
    "search = f'#{crypto_currency} -filter:retweets'\n",
    "\n",
    "tweet_cursor = tweepy.Cursor(api.search_tweets, q=search, lang='en', tweet_mode='extended').items(200) # api.search_tweets\n",
    "\n",
    "tweets = [tweet.full_text for tweet in tweet_cursor]\n",
    "\n",
    "tweets_df = pd.DataFrame(tweets, columns=['Tweets'])\n",
    "\n",
    "for _, row in tweets_df.iterrows():\n",
    "    row['Tweets'] = re.sub('http\\S+', '', row['Tweets'])\n",
    "    row['Tweets'] = re.sub('#\\S+', '', row['Tweets'])\n",
    "    row['Tweets'] = re.sub('@\\S+', '', row['Tweets'])\n",
    "    row['Tweets'] = re.sub('\\\\n', '', row['Tweets'])\n",
    "\n",
    "tweets_df['Polarity'] = tweets_df['Tweets'].map(lambda tweet: textblob.TextBlob(tweet).sentiment.polarity)\n",
    "tweets_df['Result'] = tweets_df['Polarity'].map(lambda pol: '+' if pol > 0 else '-')\n",
    "\n",
    "\n",
    "positive = tweets_df[tweets_df.Result == '+'].count()['Tweets']\n",
    "negative = tweets_df[tweets_df.Result == '-'].count()['Tweets']\n",
    "\n",
    "plt.bar([0, 1], [positive, negative], label=['Positive', 'Negative'], color=['green', 'red'])\n",
    "plt.bar([0, 1], [positive, negative], label=['Positive', 'Negative'], color=['green', 'red'])\n",
    "\n",
    "plt.legend()\n",
    "plt.show() \n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
